import React, { useState } from 'react';
import { StyleSheet, View } from 'react-native';
import { ThemedText } from '@/components/ThemedText';
import { ThemedView } from '@/components/ThemedView';
import SelectBox from '@/components/buttons/selects/SelectBox';
import ToggleSwitch from '@/components/buttons/toggles/ToggleSwitch';
import { useNavigation } from '@react-navigation/native';

interface SelectOption {
  name: string;
  value: string;
  checked?: boolean;
}

const selectOptions: SelectOption[] = [
  { name: '–õ–µ–≥–µ–Ω–¥—ã –æ –ª—é–±–≤–∏', value: '1', checked: false },
  { name: '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã', value: '2', checked: false },
  { name: '–ù–µ–æ–±—ã—á–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏', value: '3', checked: false },
  { name: '–î–≤–∞ –º–∏—Ä–∞ - —Ä–µ–∞–ª—å–Ω—ã–π –∏ –≤–æ–ª—à–µ–±–Ω—ã–π', value: '4', checked: false },
  { name: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –∑–≤—ë–∑–¥–∞–º', value: '5', checked: false },
  { name: '–ë–∏—Ç–≤–∞ —Å —á—É–¥–æ–≤–∏—â–µ–º', value: '6', checked: false },
  { name: '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Å—É—â–µ—Å—Ç–≤–∞', value: '7', checked: false },
  { name: '–ó–∞–∫–æ–Ω—ã –º–∞–≥–∏–∏', value: '8', checked: false }
];

const listOfStories: SelectOption[] = [
  { name: '–°–∫–∞–∑–∫–∞ –ø—Ä–æ –†—ã–±–∞–∫–∞', value: '1' },
  { name: '–ì–∞—Ä—Ä–∏ –ü–æ—Ç—Ç–µ—Ä', value: '2' },
  { name: '–ñ–∏–∑–Ω—å –º—É—Ä–∞–≤—å—è', value: '3' },
];

export default function TabTwoScreen() {
  const [isMusicEnabled, setMusicEnabled] = useState<boolean>(false);
  const [isTypingEffectEnabled, setTypingEffectEnabled] = useState<boolean>(false);
  const [isUniqueStoriesEnabled, setUniqueStoriesEnabled] = useState<boolean>(false);
  const [isGameModeEnabled, setGameModeEnabled] = useState<boolean>(false);
  const [isScreenLockEnabled, setScreenLockEnabled] = useState<boolean>(false);
  const [historySizeEnabled, setHistorySizeEnabled] = useState<boolean>(false);
  
  const [selectedTheme, setSelectedTheme] = useState<SelectOption>(selectOptions[0]);

  const navigation = useNavigation();

  return (
    <View style={styles.container}>
      <ThemedView style={styles.titleContainer}>
        <ThemedText type="title">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</ThemedText>
      </ThemedView>

      <View style={styles.userContainer}>
        <ThemedText type="subtitle">üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</ThemedText>
      </View>

      <SelectBox 
        name="theme" 
        options={selectOptions} 
        selected={selectedTheme} 
        onSelect={setSelectedTheme} 
      />

      <SelectBox 
        name="Choose an option" 
        options={listOfStories} 
        onSelect={setSelectedTheme} 
        itemType="link" // Pass the itemType prop here
        navigation={navigation} 
      />

      {/* Use ToggleSwitch components for the remaining functionality */}
      <ToggleSwitch title="–†–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏" value={historySizeEnabled} onValueChange={setHistorySizeEnabled} />
      <ToggleSwitch title="–ú—É–∑—ã–∫–∞" value={isMusicEnabled} onValueChange={setMusicEnabled} />
      <ToggleSwitch title="–≠—Ñ—Ñ–µ–∫—Ç –ø–µ—á–∞—Ç–∞–Ω–∏—è" value={isTypingEffectEnabled} onValueChange={setTypingEffectEnabled} />
      <ToggleSwitch title="–¢–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏" value={isUniqueStoriesEnabled} onValueChange={setUniqueStoriesEnabled} />
      <ToggleSwitch title="–†–µ–∂–∏–º –∏–≥—Ä—ã" value={isGameModeEnabled} onValueChange={setGameModeEnabled} />
      <ToggleSwitch title="–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞" value={isScreenLockEnabled} onValueChange={setScreenLockEnabled} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#121212', // –¢–µ–º–Ω—ã–π —Ñ–æ–Ω
  },
  titleContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 20,
  },
  userContainer: {
    marginBottom: 20,
    alignItems: 'center',
  },
});